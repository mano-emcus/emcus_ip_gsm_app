# analysis_options.yaml

# 1. Base set of lints maintained by the Flutter team
include: package:flutter_lints/flutter.yaml

analyzer:
  # 2. Override specific rule severities if you like
  errors:
    # Turn “prefer const constructors” into an error
    prefer_const_constructors: error
    # Make missing const literals a warning
    prefer_const_literals_to_create_immutables: warning

linter:
  rules:
    # 3. Style & best practices
    always_declare_return_types: true
    always_specify_types: false
    avoid_print: true
    avoid_void_async: true
    camel_case_types: true
    constant_identifier_names: true
    control_flow_in_finally: true
    empty_statements: true
    hash_and_equals: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    no_duplicate_case_values: true
    non_constant_identifier_names: false   # allow legacy names if you must
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_interpolation_to_compose_strings: true
    prefer_single_quotes: true
    slash_for_doc_comments: true
    sort_constructors_first: true
    type_init_formals: true

    # 4. Flutter-specific rules
    prefer_const_constructors_in_immutables: true
    avoid_redundant_argument_values: true
    use_key_in_widget_constructors: true
    avoid_unused_constructor_parameters: true
    avoid_unnecessary_containers: true

    # 6. Enforce null-safety best practices
    prefer_null_aware_operators: true

    # 7. Pedantic picks (from package:pedantic)
    annotate_overrides: true
    avoid_empty_else: true
    avoid_return_types_on_setters: true
    avoid_shadowing_type_parameters: true
    comment_references: true
    implementation_imports: false
    unnecessary_const: true
    unnecessary_new: true
